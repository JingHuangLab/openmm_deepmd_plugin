import os
import pathlib

import numpy as np

from deepmd.infer import (
    DeepPot,
)


def test_model_differential():
    dp_model = DeepPot(os.path.dirname(str(__file__))+os.path.join("/../OpenMMDeepmdPlugin/data/", "dp_mask_test_plugin.pb"))

    dcoord = np.array(
                [
                    30.5064,32.4162,26.8576,29.5059,32.1585,27.9254,30.1116,33.5423,25.8748,26.0521,37.2306,30.3775,25.8211,36.0107,29.4026,27.4988,37.641,30.7292,26.666,26.5705,31.0643,28.0356,27.299,30.9414,27.7497,28.7408,31.1425,26.7217,30.598,31.7629,28.0165,29.7145,30.2456,25.617,27.0591,30.0519,20.8338,29.8432,27.8689,21.9533,30.2842,26.8918,23.024,30.9146,27.7717,23.8372,32.5408,28.9921,24.2888,30.6178,28.2032,19.4725,29.7016,27.31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30.5521,34.7159,25.93,27.7701,38.5256,31.5504,24.6438,27.8225,30.2841,18.6001,30.5517,27.4644,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31.7965,32.5171,27.4449,25.403,38.3478,29.7917,26.7954,25.1311,30.9683,26.9236,29.3001,32.1134,27.3896,30.8812,30.6297,21.2248,28.7875,28.7797,22.7766,32.1706,28.2755,24.7804,31.571,29.053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31.8789,32.7023,28.4211,30.5476,31.5285,26.2438,29.9127,31.3474,28.5664,29.3559,33.0362,28.5899,25.3518,38.3248,28.7963,25.5539,36.9418,31.2912,24.7743,36.056,29.0331,26.4423,36.0543,28.4825,27.7234,24.8967,30.6891,26.2442,26.8268,32.0249,28.435,27.2205,29.9076,28.794,27.0045,31.698,26.6039,28.7989,32.9175,26.2558,31.3004,32.4541,28.63,29.6258,29.3575,21.8135,28.0712,28.4133,20.6786,30.6981,28.5103,21.5231,31.1157,26.2935,22.3443,29.4934,26.2165,22.0014,32.7869,28.1369,23.7691,33.5242,29.4571,24.9627,29.9199,27.7218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27.9451,31.4364,27.3831,26.2693,34.395,30.1667,0,0,0,0,0,0,0,0,0,0,0,0,26.7203,32.3056,29.1921
                ]
            )
    datype = np.array(
        [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,5
        ]
    )
    aparam = np.array(
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1]
    )
    dbox = np.array(
        [20.0, 0, 0, 0, 20.0, 0, 0, 0, 20.0]
    )  # Not used in parctice. For interface compatibility.

    ee_1, ff_1, vv = dp_model.eval(dcoord, dbox, datype, aparam=aparam)

    
    dcoord[-1] += 0.0001

    ee_2, ff_2, vv = dp_model.eval(dcoord, dbox, datype, aparam=aparam)

    assert np.allclose(ff_2[-1][-1][-1], -(ee_2[-1] - ee_1[-1]) / 0.0001, atol=1e-1)
    